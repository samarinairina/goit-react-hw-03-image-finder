{"version":3,"sources":["components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Searchbar.jsx","components/ImageGallery/Button.jsx","components/Modal.jsx","api/pixabay.js","App.js","js/scroll.js","index.js"],"names":["ImageGalleryItem","props","className","src","url","alt","description","largeUrl","onClick","event","setImageOnClick","currentTarget","dataset","ImageGallery","gallery","map","image","webformatURL","largeImageURL","tags","onClickGalleryItem","id","Searchbar","useState","query","setQuery","onSubmit","preventDefault","type","autoComplete","autoFocus","placeholder","value","onChange","Button","Modal","isOpen","isModalOpen","onRequestClose","whenModalClose","overlayClassName","ariaHideApp","largeImageForModal","getImage","pageNumber","axios","get","then","data","App","setGallery","findQuery","currentPage","setCurrentPage","isLoading","setLoading","setImageUrl","useEffect","hits","catch","error","alert","finally","prevState","window","scrollTo","top","document","documentElement","scrollHeight","behavior","color","height","width","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a3dcff63.chunk.js","sourcesContent":["import propTypes from \"prop-types\";\nfunction ImageGalleryItem(props) {\n  const handleClick = (event) => {\n    props.setImageOnClick(event.currentTarget.dataset.url);\n  };\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        src={props.url}\n        alt={props.description}\n        className=\"ImageGalleryItem-image\"\n        data-url={props.largeUrl}\n        onClick={handleClick}\n      />\n    </li>\n  );\n}\nImageGalleryItem.propTypes = {\n  url: propTypes.string,\n  largeUrl: propTypes.string,\n  description: propTypes.string,\n  setImageOnClick: propTypes.func.isRequired,\n};\nexport default ImageGalleryItem;\n","import ImageGalleryItem from \"./ImageGalleryItem\";\nimport propTypes from \"prop-types\";\n\nfunction ImageGallery(props) {\n  return (\n    <ul className=\"ImageGallery\">\n      {props.gallery.map((image) => (\n        <ImageGalleryItem\n          key={image.id}\n          url={image.webformatURL}\n          largeUrl={image.largeImageURL}\n          description={image.tags}\n          setImageOnClick={props.onClickGalleryItem}\n        />\n      ))}\n    </ul>\n  );\n}\nImageGallery.propTypes = {\n  gallery: propTypes.array,\n  onClickGalleryItem: propTypes.func.isRequired,\n};\nexport default ImageGallery;\n","import React, { useState } from \"react\";\nimport propTypes from \"prop-types\";\n\nfunction Searchbar(props) {\n  const [query, setQuery] = useState(\"\");\n  const handleChange = (event) => {\n    setQuery(event.currentTarget.value);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    props.onSubmit(query);\n  };\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={query}\n          onChange={handleChange}\n        />\n      </form>\n    </header>\n  );\n}\nSearchbar.propTypes = {\n  onSubmit: propTypes.func.isRequired,\n};\nexport default Searchbar;\n","import propTypes from \"prop-types\";\n\nfunction Button(props) {\n  return (\n    <button className=\"Button\" onClick={props.onClick}>\n      load more\n    </button>\n  );\n}\nButton.propTypes = {\n  onClick: propTypes.func.isRequired,\n};\nexport default Button;\n","import propTypes from \"prop-types\";\nimport ReactModal from \"react-modal\";\n\nfunction Modal(props) {\n  return (\n    <ReactModal\n      isOpen={props.isModalOpen}\n      onRequestClose={props.whenModalClose}\n      className=\"Modal\"\n      overlayClassName=\"Overlay\"\n      ariaHideApp={false}\n    >\n      <div>\n        <img src={props.largeImageForModal} alt=\"\" />\n      </div>\n    </ReactModal>\n  );\n}\nModal.propTypes = {\n  largeImageForModal: propTypes.string,\n  whenModalClose: propTypes.func,\n  isModalOpen: propTypes.bool,\n};\nexport default Modal;\n","import axios from \"axios\";\n\nconst USER_KEY = \"21975280-7a157b064e0c46621c8cd5d61\";\n/**\n *\n * @param {string} query - keyword for to find images\n * @param {number} pageNumber - the number page on pixabay\n */\nexport const getImage = (query, pageNumber) => {\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${query}&page=${pageNumber}&key=${USER_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n    )\n    .then(({ data }) => data);\n};\n","import Loader from \"react-loader-spinner\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Searchbar from \"./components/Searchbar\";\nimport Button from \"./components/ImageGallery/Button\";\nimport Modal from \"./components/Modal\";\nimport React, { useState, useEffect } from \"react\";\nimport { getImage } from \"./api/pixabay.js\";\nimport { scroll } from \"./js/scroll.js\";\nimport \"./style.css\";\n\nfunction App() {\n  const [gallery, setGallery] = useState([]);\n  const [findQuery, setQuery] = useState(\"\");\n  const [currentPage, setCurrentPage] = useState(1);\n  const [isLoading, setLoading] = useState(false);\n  const [largeImageForModal, setImageUrl] = useState(\"\");\n  /**\n   * This func set in state keyword for find image\n   * @param {String} query - keyword for to find images\n   */\n  const handleGetQuery = (query) => {\n    setQuery(query);\n  };\n\n  /**\n   * Function increment currentPage on 1\n   */\n  const hanbleGetMore = () => {\n    setCurrentPage((prevState) => prevState + 1);\n  };\n  /**\n   * This func set in state URL of large image\n   * @param {string} url - URL of large image\n   */\n  const setImageForModal = (url) => {\n    setImageUrl(url);\n  };\n  /**\n   * This func delete in state URL of large image. This fucn controls opening modal window\n   */\n  const modalCloser = () => {\n    setImageUrl(\"\");\n  };\n  useEffect(() => {\n    setLoading(true);\n    getImage(findQuery, currentPage)\n      .then(({ hits }) => setGallery(hits))\n      .catch((error) => alert(error))\n      .finally(() => {\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (currentPage !== 1) {\n      setLoading(true);\n      getImage(findQuery, currentPage)\n        .then(({ hits }) => {\n          setGallery((prevState) => [...prevState, ...hits]);\n          scroll();\n        })\n        .catch((error) => alert(error))\n        .finally(() => {\n          setLoading(false);\n        });\n    }\n  }, [currentPage]);\n\n  useEffect(() => {\n    setLoading(true);\n    getImage(findQuery, 1)\n      .then(({ hits }) => setGallery(hits))\n      .catch((error) => alert(error))\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [findQuery]);\n\n  return (\n    <>\n      <div className=\"wrapperApp\">\n        <Searchbar onSubmit={handleGetQuery} />\n        <ImageGallery gallery={gallery} onClickGalleryItem={setImageForModal} />\n        {isLoading && (\n          <>\n            <Loader\n              className=\"loader\"\n              type=\"Puff\"\n              color=\"#FFBFFF\"\n              height={50}\n              width={50}\n            />\n          </>\n        )}\n        {gallery.length !== 0 && <Button onClick={hanbleGetMore} />}\n        <Modal\n          whenModalClose={modalCloser}\n          isModalOpen={largeImageForModal !== \"\" ? true : false}\n          largeImageForModal={largeImageForModal}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","/**\n * Scrolling window to end\n */\nexport const scroll = () => {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: \"smooth\",\n  });\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}